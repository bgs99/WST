
package bgs.client.generated;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SubscriptionWebService", targetNamespace = "http://server.bgs/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SubscriptionWebService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsByRateGe", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByRateGe")
    @ResponseWrapper(localName = "getSubscriptionsByRateGeResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByRateGeResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getSubscriptionsByRateGeRequest", output = "http://server.bgs/SubscriptionWebService/getSubscriptionsByRateGeResponse")
    public List<Subscription> getSubscriptionsByRateGe(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws NegativeParameterException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createSubscription", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.CreateSubscription")
    @ResponseWrapper(localName = "createSubscriptionResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.CreateSubscriptionResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/createSubscriptionRequest", output = "http://server.bgs/SubscriptionWebService/createSubscriptionResponse", fault = {
        @FaultAction(className = NegativeParameterException.class, value = "http://server.bgs/SubscriptionWebService/createSubscription/Fault/NegativeParameterException")
    })
    public int createSubscription(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        boolean arg3)
        throws NegativeParameterException
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @throws SubscriptionNotFoundException
     * @throws NegativeParameterException
     */
    @WebMethod
    @RequestWrapper(localName = "editSubscription", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.EditSubscription")
    @ResponseWrapper(localName = "editSubscriptionResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.EditSubscriptionResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/editSubscriptionRequest", output = "http://server.bgs/SubscriptionWebService/editSubscriptionResponse", fault = {
        @FaultAction(className = NegativeParameterException.class, value = "http://server.bgs/SubscriptionWebService/editSubscription/Fault/NegativeParameterException"),
        @FaultAction(className = SubscriptionNotFoundException.class, value = "http://server.bgs/SubscriptionWebService/editSubscription/Fault/SubscriptionNotFoundException")
    })
    public void editSubscription(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        double arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        boolean arg4)
        throws NegativeParameterException, SubscriptionNotFoundException
    ;

    /**
     * 
     * @param arg0
     * @throws SubscriptionNotFoundException
     */
    @WebMethod
    @RequestWrapper(localName = "removeSubscription", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.RemoveSubscription")
    @ResponseWrapper(localName = "removeSubscriptionResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.RemoveSubscriptionResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/removeSubscriptionRequest", output = "http://server.bgs/SubscriptionWebService/removeSubscriptionResponse", fault = {
        @FaultAction(className = SubscriptionNotFoundException.class, value = "http://server.bgs/SubscriptionWebService/removeSubscription/Fault/SubscriptionNotFoundException")
    })
    public void removeSubscription(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws SubscriptionNotFoundException
    ;

    /**
     * 
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllSubscriptions", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetAllSubscriptions")
    @ResponseWrapper(localName = "getAllSubscriptionsResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetAllSubscriptionsResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getAllSubscriptionsRequest", output = "http://server.bgs/SubscriptionWebService/getAllSubscriptionsResponse")
    public List<Subscription> getAllSubscriptions();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsByName", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByName")
    @ResponseWrapper(localName = "getSubscriptionsByNameResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByNameResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getSubscriptionsByNameRequest", output = "http://server.bgs/SubscriptionWebService/getSubscriptionsByNameResponse")
    public List<Subscription> getSubscriptionsByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsById", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsById")
    @ResponseWrapper(localName = "getSubscriptionsByIdResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByIdResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getSubscriptionsByIdRequest", output = "http://server.bgs/SubscriptionWebService/getSubscriptionsByIdResponse")
    public List<Subscription> getSubscriptionsById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsByThroughputLe", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByThroughputLe")
    @ResponseWrapper(localName = "getSubscriptionsByThroughputLeResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByThroughputLeResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getSubscriptionsByThroughputLeRequest", output = "http://server.bgs/SubscriptionWebService/getSubscriptionsByThroughputLeResponse")
    public List<Subscription> getSubscriptionsByThroughputLe(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsByThroughputGe", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByThroughputGe")
    @ResponseWrapper(localName = "getSubscriptionsByThroughputGeResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByThroughputGeResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getSubscriptionsByThroughputGeRequest", output = "http://server.bgs/SubscriptionWebService/getSubscriptionsByThroughputGeResponse")
    public List<Subscription> getSubscriptionsByThroughputGe(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsByRateLe", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByRateLe")
    @ResponseWrapper(localName = "getSubscriptionsByRateLeResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByRateLeResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getSubscriptionsByRateLeRequest", output = "http://server.bgs/SubscriptionWebService/getSubscriptionsByRateLeResponse")
    public List<Subscription> getSubscriptionsByRateLe(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsByTv", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByTv")
    @ResponseWrapper(localName = "getSubscriptionsByTvResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsByTvResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getSubscriptionsByTvRequest", output = "http://server.bgs/SubscriptionWebService/getSubscriptionsByTvResponse")
    public List<Subscription> getSubscriptionsByTv(
        @WebParam(name = "arg0", targetNamespace = "")
        boolean arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsBetterThan", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsBetterThan")
    @ResponseWrapper(localName = "getSubscriptionsBetterThanResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsBetterThanResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getSubscriptionsBetterThanRequest", output = "http://server.bgs/SubscriptionWebService/getSubscriptionsBetterThanResponse")
    public List<Subscription> getSubscriptionsBetterThan(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<bgs.client.generated.Subscription>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSubscriptionsWorseThan", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsWorseThan")
    @ResponseWrapper(localName = "getSubscriptionsWorseThanResponse", targetNamespace = "http://server.bgs/", className = "bgs.client.generated.GetSubscriptionsWorseThanResponse")
    @Action(input = "http://server.bgs/SubscriptionWebService/getSubscriptionsWorseThanRequest", output = "http://server.bgs/SubscriptionWebService/getSubscriptionsWorseThanResponse")
    public List<Subscription> getSubscriptionsWorseThan(
        @WebParam(name = "arg0", targetNamespace = "")
        double arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

}
